{"version":3,"sources":["components/ActionLink.jsx","components/Contact.jsx","contexts/LanguageContext.jsx","components/LanguageChanger.jsx","contexts/ThemeContext.jsx","components/ThemeChanger.jsx","components/Topic.jsx","pages/Home.jsx","App.js","registerServiceWorker.js","actions.js","reducer.js","sagas.js","index.js"],"names":["ActionLink","href","this","props","to","target","rel","linkText","Component","Contact","className","LanguageContext","React","createContext","LanguageChanger","state","language","handleChange","bind","event","value","field","name","setState","style","margin","onChange","Provider","children","themes","light","background","primary","textPrimary","block","icon","dark","ThemeContext","ThemeChanger","theme","themeSelected","Topic","title","since","until","employer","rol","moreInfo","Consumer","App","Home","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","types","LOGIN","FETCH_USERS_SUCCESS","FETCH_USERS_FAIL","fetchUsersFail","type","initialState","user","loading","reducer","action","payload","loadUsers","watchLoadUsers","rootSaga","call","axios","get","res","status","put","users","data","takeEvery","FETCH_USERS_START","all","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.37ed872e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass ActionLink extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <a href={this.props.to} target=\"_blank\" rel=\"noreferrer\">\r\n                {this.props.linkText}\r\n            </a>\r\n        );\r\n    };\r\n}\r\n\r\nexport default ActionLink;","import React, { Component } from \"react\";\r\nimport ActionLink from './ActionLink'\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return (\r\n            <ul className=\"contact\">\r\n                <li>\r\n                    <ActionLink to=\"https://github.com/JuanDeccechis\" linkText=\"Github\" />\r\n                </li>\r\n                <li>\r\n                    <ActionLink to=\"https://www.linkedin.com/in/juan-cruz-deccechis-873882177/\" linkText=\"LinkedIn\" />\r\n                </li>\r\n            </ul>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\n\r\nconst LanguageContext = React.createContext('es');\r\n\r\nexport default LanguageContext;","import React, { Component } from 'react';\r\n\r\nimport LanguageContext from '../contexts/LanguageContext'\r\n\r\nclass LanguageChanger extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            language: 'es'\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(event) {\r\n        const value = event.target.value;\r\n        const field = event.target.name;\r\n        this.setState({ [field]: value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ margin: '10px' }}>\r\n                <select\r\n                    value={this.state.language}\r\n                    onChange={this.handleChange}\r\n                    name=\"language\"\r\n                >\r\n                    <option value=\"es\">Espa√±ol</option>\r\n                    <option value=\"en\">English</option>\r\n                </select>\r\n                <LanguageContext.Provider value={this.state.language} >\r\n                    {this.props.children}\r\n                </LanguageContext.Provider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LanguageChanger;","import React from 'react';\r\n\r\nexport const themes = { light: { background: \"#FFFFFF\", primary: \"#0005FF\", textPrimary: \"#131F33\", block: \"#666D7A\", icon: \"#25AE88\" }, dark: { background: \"#131F33\", primary: \"#BBD0FF\", textPrimary: \"#FFFFFF\", block: \"#666D7A\", icon: \"#25AE88\" } };\r\nconst ThemeContext = React.createContext(themes.light);\r\nexport default ThemeContext;","import React, { Component } from 'react';\r\n\r\nimport { themes } from '../contexts/ThemeContext';\r\nimport ThemeContext from '../contexts/ThemeContext'\r\n\r\nclass ThemeChanger extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            theme: themes.light,\r\n            themeSelected: \"light\"\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(event) {\r\n        const value = event.target.value;\r\n        const field = event.target.name;\r\n        this.setState({ [field]: value, theme: themes[value] });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ margin: '10px' }}>\r\n                <select\r\n                    value={this.state.themeSelected}\r\n                    onChange={this.handleChange}\r\n                    name=\"themeSelected\"\r\n                >\r\n                    <option value=\"light\">{this.props.language === 'es' ? \"Claro\" : \"Light\"}</option>\r\n                    <option value=\"dark\">{this.props.language === 'es' ? \"Nocturno\" : \"Dark\"}</option>\r\n                </select>\r\n                <ThemeContext.Provider value={this.state.theme} >\r\n                    {this.props.children}\r\n                </ThemeContext.Provider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ThemeChanger;","import React, { Component } from \"react\";\r\n\r\nclass Topic extends Component {\r\n    render() {\r\n        const { title, since, until, employer, rol, moreInfo } = this.props;\r\n        return (\r\n            <div>\r\n                {title &&\r\n                    <h2>{title}</h2>\r\n                }\r\n                <div className=\"topic-information\">\r\n                    {since && until &&\r\n                        <div className=\"short-column\">{since} - {until}</div>\r\n                    }\r\n                    {employer ?\r\n                        <div className=\"long-column\"> \r\n                            <p className=\"outstanding\">{employer}</p>\r\n                            <p>{rol}</p>\r\n                        </div>\r\n                    :\r\n                        <span>{rol}</span>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Topic;","import React, { Component } from \"react\";\r\n\r\nimport LanguageContext from '../contexts/LanguageContext';\r\nimport LanguageChanger from '../components/LanguageChanger';\r\nimport ThemeChanger from '../components/ThemeChanger';\r\nimport Topic from '../components/Topic';\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <LanguageChanger>\r\n                    <LanguageContext.Consumer>\r\n                        {\r\n                            language => (\r\n                                <div className=\"app\">\r\n                                    <ThemeChanger language={language}></ThemeChanger>\r\n                                    <h1>\r\n                                        {language === 'es' ? \"Bienvenido a mi perfil\" : \"Welcome to my profile\"}\r\n                                    </h1>\r\n                                    <div className=\"presentation\">\r\n                                        <div className=\"img img-profile\"></div>\r\n                                        <div className=\"user-information\">\r\n                                            <p> JUAN CRUZ DECCECHIS <div className=\"img short-img img-user inline\"></div></p>\r\n                                            <p> juandeccechis@gmail.com <div className=\"img short-img img-mail inline\"></div></p>\r\n                                            <p> +5492494581833 <div className=\"img short-img img-phone inline\"></div></p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Topic title=\"Experiencia Profesional\" since=\"2019\" until=\"Presente\" employer=\"Technisys\" rol=\"Fullstack Developer\" moreInfo=\"Desarrollo de aplicaciones bancarias web/mobile\"></Topic>\r\n                                    <Topic since=\"2018\" until=\"2021\" employer=\"Universidad Nacional del Centro de la Provincia de Buenos Aires\" rol=\"Ayudante alumno Web 1 - Investigacion Operativa\" moreInfo=\"\"></Topic>\r\n                                    <Topic title=\"Estudios\" since=\"2012\" until=\"2019\" employer=\"Universidad Nacional del Centro de la Provincia de Buenos Aires\" rol=\"Ingenier√≠a de Sistemas\" moreInfo=\"Estado: Finalizado\"></Topic>\r\n                                    <Topic since=\"2018\" until=\"Presente\" employer=\"Universidad Nacional del Centro de la Provincia de Buenos Aires\" rol=\"Tecnicatura Universitaria en Desarrollo de Aplicaciones Inform√°ticas\" moreInfo=\"Estado: 90%\"></Topic>\r\n                                    <Topic title=\"Habilidades\" rol=\"Proactivo\"></Topic>\r\n                                    <Topic rol=\"Responsable\"></Topic>\r\n                                    <Topic rol=\"Trabajo en equipo\"></Topic>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </LanguageContext.Consumer>\r\n                </LanguageChanger>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Contact;","import React, { Component } from \"react\";\nimport Contact from './components/Contact';\nimport Home from './pages/Home';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Home />\n        <Contact />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","\r\nexport const types = {\r\n  LOGIN: \"LOGIN\",\r\n\r\n  FETCH_USERS_SUCCESS: \"FETCH_USERS_SUCCESS\",\r\n  FETCH_USERS_FAIL: \"FETCH_USERS_FAIL\",\r\n};\r\n\r\nexport const login = () => {\r\n  return {\r\n    type: types.LOGIN\r\n  };\r\n};\r\n\r\n//estas funciones y sus types estan de mas para el ejemplo de saga\r\nexport const fetchUsersSuccess = users => {\r\n  return {\r\n    type: types.FETCH_USERS_SUCCESS,\r\n    payload: users\r\n  };\r\n};\r\n\r\nexport const fetchUsersFail = () => {\r\n  return {\r\n    type: types.FETCH_USERS_FAIL\r\n  };\r\n};\r\n","import { types } from \"./actions\";\r\n\r\nconst initialState = {\r\n  user: \"\",\r\n  loading: false,\r\n  error: ''\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case types.LOGIN: {\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      }\r\n    }\r\n    default: \r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","\r\nimport { call, put, takeEvery, all, } from 'redux-saga/effects'\r\nimport { types, fetchUsersSuccess, fetchUsersFail } from './actions'\r\nimport axios from 'axios';\r\n\r\n//este saga se deja de ejemplo, pero no se utiliza en la app\r\nfunction* loadUsers() {\r\n  try {\r\n    const res = yield call(axios.get, 'https://jsonplaceholder.typicode.com/users')\r\n    if(res.status === 200) {\r\n      yield put(fetchUsersSuccess(res.data))\r\n    }\r\n    else {\r\n      yield put(fetchUsersFail())\r\n    }\r\n  } catch (error) {\r\n    yield put(fetchUsersFail(error))\r\n  }\r\n}\r\n\r\nfunction* watchLoadUsers() {\r\n  yield takeEvery(types.FETCH_USERS_START, loadUsers)\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    watchLoadUsers(),\r\n  ])\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//desde aca cambia por reducer/saga\n//import reportWebVitals from './reportWebVitals';\nimport registerServiceWorker from './registerServiceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { Provider } from \"react-redux\";\nimport reducer from \"./reducer\"; //despues va a cambiar por el composeReducer\nimport rootSaga from './sagas'; //despues va a cambiar por un grupo de saga\n\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(sagaMiddleware)));\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  /*<React.StrictMode>\n    <App />\n  </React.StrictMode>,*/\n  //cambia porque ahora usa el store global\n  <Provider store={store}> \n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n//reportWebVitals();\n"],"sourceRoot":""}